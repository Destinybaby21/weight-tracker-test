{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\OneDrive\\\\Desktop\\\\Backup\\\\Weight Tracker\\\\weight-tracker\\\\src\\\\edit_weight.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Define the prop types for EditWeight component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditWeight = ({\n  id,\n  onClose\n}) => {\n  _s();\n  const [weight, setWeight] = useState(null);\n\n  // Fetch weight details by ID\n  useEffect(() => {\n    const fetchWeight = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/weights/${id}`);\n        const data = await response.json();\n        setWeight(data.weight); // Assuming the response has the weight object\n      } catch (error) {\n        console.error(\"Error fetching weight:\", error);\n      }\n    };\n    fetchWeight();\n  }, [id]);\n\n  // Function to handle updating the weight\n  const handleUpdateWeight = async () => {\n    if (weight === null) return;\n    try {\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          weight\n        })\n      });\n      if (response.ok) {\n        onClose(); // Close the modal after update\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to update weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error updating weight:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: weight !== null && weight !== void 0 ? weight : \"\",\n      onChange: e => setWeight(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateWeight,\n      children: \"Update Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EditWeight, \"mFfuo+qG9IDOHaQuM2bjexSUYn8=\");\n_c = EditWeight;\nexport default EditWeight;\nvar _c;\n$RefreshReg$(_c, \"EditWeight\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditWeight","id","onClose","_s","weight","setWeight","fetchWeight","response","fetch","data","json","error","console","handleUpdateWeight","method","headers","body","JSON","stringify","ok","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/darre/OneDrive/Desktop/Backup/Weight Tracker/weight-tracker/src/edit_weight.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// Define the prop types for EditWeight component\r\ninterface EditWeightProps {\r\n  id: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst EditWeight: React.FC<EditWeightProps> = ({ id, onClose }) => {\r\n  const [weight, setWeight] = useState<number | null>(null);\r\n\r\n  // Fetch weight details by ID\r\n  useEffect(() => {\r\n    const fetchWeight = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/weights/${id}`);\r\n        const data = await response.json();\r\n        setWeight(data.weight); // Assuming the response has the weight object\r\n      } catch (error) {\r\n        console.error(\"Error fetching weight:\", error);\r\n      }\r\n    };\r\n\r\n    fetchWeight();\r\n  }, [id]);\r\n\r\n  // Function to handle updating the weight\r\n  const handleUpdateWeight = async () => {\r\n    if (weight === null) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ weight }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        onClose(); // Close the modal after update\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(\"Failed to update weight:\", error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating weight:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <h2>Edit Weight</h2>\r\n      <input\r\n        type=\"number\"\r\n        value={weight ?? \"\"}\r\n        onChange={(e) => setWeight(Number(e.target.value))}\r\n      />\r\n      <button onClick={handleUpdateWeight}>Update Weight</button>\r\n      <button onClick={onClose}>Cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditWeight;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCP,EAAE,EAAE,CAAC;QACnE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,SAAS,CAACI,IAAI,CAACL,MAAM,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;;EAER;EACA,MAAMY,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIT,MAAM,KAAK,IAAI,EAAE;IAErB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCP,EAAE,EAAE,EAAE;QAClEa,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd;QAAO,CAAC;MACjC,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACY,EAAE,EAAE;QACfjB,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,MAAM;QACL,MAAMS,KAAK,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC;QACnCE,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACS,OAAO,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKsB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBvB,OAAA;MAAAuB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB3B,OAAA;MACE4B,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAExB,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAG;MACpByB,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAAC0B,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACF3B,OAAA;MAAQkC,OAAO,EAAEpB,kBAAmB;MAAAS,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3D3B,OAAA;MAAQkC,OAAO,EAAE/B,OAAQ;MAAAoB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtDIH,UAAqC;AAAAkC,EAAA,GAArClC,UAAqC;AAwD3C,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}