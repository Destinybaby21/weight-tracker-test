{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\OneDrive\\\\Desktop\\\\Backup\\\\Weight Tracker\\\\weight-tracker\\\\src\\\\edit_weight.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Define the prop types for EditWeight component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditWeight = ({\n  id,\n  onClose\n}) => {\n  _s();\n  const [weight, setWeight] = useState(null);\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  // Fetch weight details by ID\n  useEffect(() => {\n    const fetchWeight = async () => {\n      if (loading) return; // Prevent fetch if already in progress\n\n      setLoading(true); // Set loading state to true\n      try {\n        console.log(`Fetching weight for id: ${id}`);\n        const response = await fetch(`http://localhost:5000/weights/${id}`);\n\n        // If status is not 200, throw an error\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setWeight(data.weight); // Assuming the response has the weight object\n      } catch (error) {\n        console.error(\"Error fetching weight:\", error);\n      } finally {\n        setLoading(false); // Reset loading state\n      }\n    };\n\n    // Only trigger fetch when id is valid\n    if (id) {\n      fetchWeight();\n    }\n  }, [id, loading]); // Include `loading` as a dependency to manage API calls\n\n  // Function to handle updating the weight\n  const handleUpdateWeight = async () => {\n    if (weight === null || loading) return; // Don't proceed if loading is true\n\n    setLoading(true); // Set loading to true while the update is in progress\n\n    try {\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          weight\n        })\n      });\n      if (response.ok) {\n        onClose(); // Close the modal after update\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to update weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error updating weight:\", error);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg p-6 w-full max-w-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-gray-800\",\n        children: \"Edit Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"weight\",\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Weight (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"weight\",\n          type: \"number\",\n          value: weight !== null && weight !== void 0 ? weight : \"\",\n          onChange: e => setWeight(Number(e.target.value)),\n          className: \"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n          placeholder: \"Enter weight\",\n          disabled: loading // Disable input when loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-200\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateWeight,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\",\n          disabled: loading // Disable the update button while loading\n          ,\n          children: loading ? \"Updating...\" : \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(EditWeight, \"3mQOOP+umPTTus/cTU9fCSubZys=\");\n_c = EditWeight;\nexport default EditWeight;\nvar _c;\n$RefreshReg$(_c, \"EditWeight\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditWeight","id","onClose","_s","weight","setWeight","loading","setLoading","fetchWeight","console","log","response","fetch","ok","Error","status","data","json","error","handleUpdateWeight","method","headers","body","JSON","stringify","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","Number","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/darre/OneDrive/Desktop/Backup/Weight Tracker/weight-tracker/src/edit_weight.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// Define the prop types for EditWeight component\r\ninterface EditWeightProps {\r\n  id: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst EditWeight: React.FC<EditWeightProps> = ({ id, onClose }) => {\r\n  const [weight, setWeight] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false); // State to track loading status\r\n\r\n  // Fetch weight details by ID\r\n  useEffect(() => {\r\n    const fetchWeight = async () => {\r\n      if (loading) return; // Prevent fetch if already in progress\r\n\r\n      setLoading(true); // Set loading state to true\r\n      try {\r\n        console.log(`Fetching weight for id: ${id}`);\r\n        const response = await fetch(`http://localhost:5000/weights/${id}`);\r\n        \r\n        // If status is not 200, throw an error\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setWeight(data.weight); // Assuming the response has the weight object\r\n      } catch (error) {\r\n        console.error(\"Error fetching weight:\", error);\r\n      } finally {\r\n        setLoading(false); // Reset loading state\r\n      }\r\n    };\r\n\r\n    // Only trigger fetch when id is valid\r\n    if (id) {\r\n      fetchWeight();\r\n    }\r\n  }, [id, loading]); // Include `loading` as a dependency to manage API calls\r\n\r\n  // Function to handle updating the weight\r\n  const handleUpdateWeight = async () => {\r\n    if (weight === null || loading) return; // Don't proceed if loading is true\r\n\r\n    setLoading(true); // Set loading to true while the update is in progress\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ weight }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        onClose(); // Close the modal after update\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(\"Failed to update weight:\", error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating weight:\", error);\r\n    } finally {\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6 w-full max-w-sm\">\r\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Edit Weight</h2>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"weight\" className=\"block text-sm font-medium text-gray-700\">\r\n            Weight (kg)\r\n          </label>\r\n          <input\r\n            id=\"weight\"\r\n            type=\"number\"\r\n            value={weight ?? \"\"}\r\n            onChange={(e) => setWeight(Number(e.target.value))}\r\n            className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            placeholder=\"Enter weight\"\r\n            disabled={loading} // Disable input when loading\r\n          />\r\n        </div>\r\n        <div className=\"flex justify-end space-x-3\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-200\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleUpdateWeight}\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\"\r\n            disabled={loading} // Disable the update button while loading\r\n          >\r\n            {loading ? \"Updating...\" : \"Update\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditWeight;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}