{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\OneDrive\\\\Desktop\\\\Backup\\\\Weight Tracker\\\\weight-tracker\\\\src\\\\main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddWeight from \"./add_weight\";\nimport EditWeight from \"./edit_weight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  // Initialize with predefined weights\n  const [weights, setWeights] = useState([{\n    id: \"1\",\n    weight: 70\n  }, {\n    id: \"2\",\n    weight: 75\n  }, {\n    id: \"3\",\n    weight: 80\n  }]);\n  const [showAddWeight, setShowAddWeight] = useState(false);\n  const [showEditWeight, setShowEditWeight] = useState(false);\n  const [selectedWeightId, setSelectedWeightId] = useState(null);\n\n  // Fetch weights from the backend on component mount\n  const fetchWeights = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/weights\");\n      const data = await response.json();\n      setWeights(data);\n    } catch (error) {\n      console.error(\"Error fetching weights:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchWeights();\n  }, []);\n\n  // Function to add a new weight\n  const addWeight = async weight => {\n    try {\n      const response = await fetch(\"http://localhost:5000/weights\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          weight\n        })\n      });\n      if (response.ok) {\n        fetchWeights(); // Refresh weights list after adding\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to add weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error adding weight:\", error);\n    }\n  };\n\n  // Function to handle editing a weight\n  const handleEditWeight = id => {\n    setSelectedWeightId(id);\n    setShowEditWeight(true);\n  };\n\n  // Function to handle deleting a weight\n  const handleDeleteWeight = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        fetchWeights(); // Refresh weights list after deleting\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to delete weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error deleting weight:\", error);\n    }\n  };\n\n  // Function to handle updating a weight (called from EditWeight component)\n  const handleUpdateWeight = () => {\n    fetchWeights(); // Refresh weights list after updating\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Weight List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2 mb-6\",\n      children: weights.map(weight => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Weight: \", weight.weight, \" kg\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditWeight(weight.id),\n          className: \"ml-4 text-blue-500 hover:text-blue-700\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteWeight(weight.id),\n          className: \"ml-4 text-red-500 hover:text-red-700\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, weight.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddWeight(prev => !prev),\n      className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\",\n      children: showAddWeight ? \"Cancel\" : \"Add Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), showAddWeight && /*#__PURE__*/_jsxDEV(AddWeight, {\n      onAdd: addWeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }, this), showEditWeight && selectedWeightId && /*#__PURE__*/_jsxDEV(EditWeight, {\n      id: selectedWeightId,\n      onClose: () => {\n        setShowEditWeight(false);\n        handleUpdateWeight(); // Refresh list after edit\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"DuDMCrJEd/9ngeSAnc5xzRZC5eY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","AddWeight","EditWeight","jsxDEV","_jsxDEV","Main","_s","weights","setWeights","id","weight","showAddWeight","setShowAddWeight","showEditWeight","setShowEditWeight","selectedWeightId","setSelectedWeightId","fetchWeights","response","fetch","data","json","error","console","addWeight","method","headers","body","JSON","stringify","ok","message","handleEditWeight","handleDeleteWeight","handleUpdateWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","prev","onAdd","onClose","_c","$RefreshReg$"],"sources":["C:/Users/darre/OneDrive/Desktop/Backup/Weight Tracker/weight-tracker/src/main.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddWeight from \"./add_weight\";\r\nimport EditWeight from \"./edit_weight\";\r\n\r\nconst Main: React.FC = () => {\r\n  // Initialize with predefined weights\r\n  const [weights, setWeights] = useState<{ id: string; weight: number }[]>([\r\n    { id: \"1\", weight: 70 },\r\n    { id: \"2\", weight: 75 },\r\n    { id: \"3\", weight: 80 },\r\n  ]);\r\n  const [showAddWeight, setShowAddWeight] = useState(false);\r\n  const [showEditWeight, setShowEditWeight] = useState(false);\r\n  const [selectedWeightId, setSelectedWeightId] = useState<string | null>(null);\r\n\r\n  // Fetch weights from the backend on component mount\r\n  const fetchWeights = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/weights\");\r\n      const data = await response.json();\r\n      setWeights(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching weights:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWeights();\r\n  }, []);\r\n\r\n  // Function to add a new weight\r\n  const addWeight = async (weight: number) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/weights\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ weight }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchWeights(); // Refresh weights list after adding\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(\"Failed to add weight:\", error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding weight:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to handle editing a weight\r\n  const handleEditWeight = (id: string) => {\r\n    setSelectedWeightId(id);\r\n    setShowEditWeight(true);\r\n  };\r\n\r\n  // Function to handle deleting a weight\r\n  const handleDeleteWeight = async (id: string) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchWeights(); // Refresh weights list after deleting\r\n      } else {\r\n        const error = await response.json();\r\n        console.error(\"Failed to delete weight:\", error.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting weight:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to handle updating a weight (called from EditWeight component)\r\n  const handleUpdateWeight = () => {\r\n    fetchWeights(); // Refresh weights list after updating\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Weight List</h1>\r\n\r\n      {/* Display list of weights */}\r\n      <ul className=\"space-y-2 mb-6\">\r\n        {weights.map((weight) => (\r\n          <li key={weight.id} className=\"text-lg text-gray-700\">\r\n            Weight: {weight.weight} kg\r\n            <button\r\n              onClick={() => handleEditWeight(weight.id)}\r\n              className=\"ml-4 text-blue-500 hover:text-blue-700\"\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={() => handleDeleteWeight(weight.id)}\r\n              className=\"ml-4 text-red-500 hover:text-red-700\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Button to toggle AddWeight visibility */}\r\n      <button\r\n        onClick={() => setShowAddWeight((prev) => !prev)}\r\n        className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\"\r\n      >\r\n        {showAddWeight ? \"Cancel\" : \"Add Weight\"}\r\n      </button>\r\n\r\n      {/* Conditionally render AddWeight component */}\r\n      {showAddWeight && <AddWeight onAdd={addWeight} />}\r\n\r\n      {/* Conditionally render EditWeight component */}\r\n      {showEditWeight && selectedWeightId && (\r\n        <EditWeight\r\n          id={selectedWeightId}\r\n          onClose={() => {\r\n            setShowEditWeight(false);\r\n            handleUpdateWeight(); // Refresh list after edit\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}