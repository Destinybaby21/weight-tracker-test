{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darre\\\\OneDrive\\\\Desktop\\\\Backup\\\\Weight Tracker\\\\weight-tracker\\\\src\\\\main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddWeight from \"./add_weight\";\nimport EditWeight from \"./edit_weight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [weights, setWeights] = useState([]);\n  const [showAddWeight, setShowAddWeight] = useState(false);\n  const [showEditWeight, setShowEditWeight] = useState(false);\n  const [selectedWeightId, setSelectedWeightId] = useState(null);\n\n  // Fetch weights from the backend on component mount\n  //   const fetchWeights = async () => {\n  //     try {\n  //       const response = await fetch(\"http://localhost:5000/weights\");\n  //       const data = await response.json();\n  //       setWeights(data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching weights:\", error);\n  //     }\n  //   };\n\n  //   useEffect(() => {\n  //     fetchWeights();\n  //   }, []);\n\n  const fetchWeights = () => {\n    const predefinedWeights = [{\n      id: \"1\",\n      weight: 70\n    }, {\n      id: \"2\",\n      weight: 75\n    }, {\n      id: \"3\",\n      weight: 80\n    }];\n    setWeights(predefinedWeights); // Set the predefined weights in state\n  };\n  useEffect(() => {\n    fetchWeights(); // Call the function to fetch and set weights\n  }, []); // Empty dependency array ensures it runs once when the component mounts\n\n  // Function to add a new weight\n  const addWeight = async weight => {\n    try {\n      const response = await fetch(\"http://localhost:5000/weights\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          weight\n        })\n      });\n      if (response.ok) {\n        fetchWeights(); // Refresh weights list after adding\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to add weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error adding weight:\", error);\n    }\n  };\n\n  // Function to handle editing a weight\n  const handleEditWeight = id => {\n    setSelectedWeightId(id);\n    setShowEditWeight(true);\n  };\n\n  // Function to handle deleting a weight\n  const handleDeleteWeight = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/weights/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        fetchWeights(); // Refresh weights list after deleting\n      } else {\n        const error = await response.json();\n        console.error(\"Failed to delete weight:\", error.message);\n      }\n    } catch (error) {\n      console.error(\"Error deleting weight:\", error);\n    }\n  };\n\n  // Function to handle updating a weight (called from EditWeight component)\n  const handleUpdateWeight = () => {\n    fetchWeights(); // Refresh weights list after updating\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Weight List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2 mb-6\",\n      children: weights.map(weight => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"Weight: \", weight.weight, \" kg\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditWeight(weight.id),\n          className: \"ml-4 text-blue-500 hover:text-blue-700\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteWeight(weight.id),\n          className: \"ml-4 text-red-500 hover:text-red-700\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, weight.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddWeight(prev => !prev),\n      className: \"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\",\n      children: showAddWeight ? \"Cancel\" : \"Add Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), showAddWeight && /*#__PURE__*/_jsxDEV(AddWeight, {\n      onAdd: addWeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }, this), showEditWeight && selectedWeightId && /*#__PURE__*/_jsxDEV(EditWeight, {\n      id: selectedWeightId,\n      onClose: () => {\n        setShowEditWeight(false);\n        handleUpdateWeight(); // Refresh list after edit\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"26qu1u7+xCjCA+fdjkV3c8gpssA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","AddWeight","EditWeight","jsxDEV","_jsxDEV","Main","_s","weights","setWeights","showAddWeight","setShowAddWeight","showEditWeight","setShowEditWeight","selectedWeightId","setSelectedWeightId","fetchWeights","predefinedWeights","id","weight","addWeight","response","fetch","method","headers","body","JSON","stringify","ok","error","json","console","message","handleEditWeight","handleDeleteWeight","handleUpdateWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","prev","onAdd","onClose","_c","$RefreshReg$"],"sources":["C:/Users/darre/OneDrive/Desktop/Backup/Weight Tracker/weight-tracker/src/main.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddWeight from \"./add_weight\";\r\nimport EditWeight from \"./edit_weight\";\r\n\r\nconst Main: React.FC = () => {\r\n    const [weights, setWeights] = useState<{ id: string; weight: number }[]>([]);\r\n    const [showAddWeight, setShowAddWeight] = useState(false);\r\n    const [showEditWeight, setShowEditWeight] = useState(false);\r\n    const [selectedWeightId, setSelectedWeightId] = useState<string | null>(null);\r\n\r\n    // Fetch weights from the backend on component mount\r\n    //   const fetchWeights = async () => {\r\n    //     try {\r\n    //       const response = await fetch(\"http://localhost:5000/weights\");\r\n    //       const data = await response.json();\r\n    //       setWeights(data);\r\n    //     } catch (error) {\r\n    //       console.error(\"Error fetching weights:\", error);\r\n    //     }\r\n    //   };\r\n\r\n    //   useEffect(() => {\r\n    //     fetchWeights();\r\n    //   }, []);\r\n\r\n    const fetchWeights = () => {\r\n        const predefinedWeights = [\r\n          { id: \"1\", weight: 70 },\r\n          { id: \"2\", weight: 75 },\r\n          { id: \"3\", weight: 80 },\r\n        ];\r\n        setWeights(predefinedWeights); // Set the predefined weights in state\r\n      };\r\n    \r\n      useEffect(() => {\r\n        fetchWeights(); // Call the function to fetch and set weights\r\n      }, []); // Empty dependency array ensures it runs once when the component mounts\r\n\r\n    // Function to add a new weight\r\n    const addWeight = async (weight: number) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/weights\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ weight }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                fetchWeights(); // Refresh weights list after adding\r\n            } else {\r\n                const error = await response.json();\r\n                console.error(\"Failed to add weight:\", error.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding weight:\", error);\r\n        }\r\n    };\r\n\r\n    // Function to handle editing a weight\r\n    const handleEditWeight = (id: string) => {\r\n        setSelectedWeightId(id);\r\n        setShowEditWeight(true);\r\n    };\r\n\r\n    // Function to handle deleting a weight\r\n    const handleDeleteWeight = async (id: string) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/weights/${id}`, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (response.ok) {\r\n                fetchWeights(); // Refresh weights list after deleting\r\n            } else {\r\n                const error = await response.json();\r\n                console.error(\"Failed to delete weight:\", error.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting weight:\", error);\r\n        }\r\n    };\r\n\r\n    // Function to handle updating a weight (called from EditWeight component)\r\n    const handleUpdateWeight = () => {\r\n        fetchWeights(); // Refresh weights list after updating\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Weight List</h1>\r\n\r\n            {/* Display list of weights */}\r\n            <ul className=\"space-y-2 mb-6\">\r\n                {weights.map((weight) => (\r\n                    <li key={weight.id} className=\"text-lg text-gray-700\">\r\n                        Weight: {weight.weight} kg\r\n                        <button\r\n                            onClick={() => handleEditWeight(weight.id)}\r\n                            className=\"ml-4 text-blue-500 hover:text-blue-700\"\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleDeleteWeight(weight.id)}\r\n                            className=\"ml-4 text-red-500 hover:text-red-700\"\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {/* Button to toggle AddWeight visibility */}\r\n            <button\r\n                onClick={() => setShowAddWeight((prev) => !prev)}\r\n                className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300\"\r\n            >\r\n                {showAddWeight ? \"Cancel\" : \"Add Weight\"}\r\n            </button>\r\n\r\n            {/* Conditionally render AddWeight component */}\r\n            {showAddWeight && <AddWeight onAdd={addWeight} />}\r\n\r\n            {/* Conditionally render EditWeight component */}\r\n            {showEditWeight && selectedWeightId && (\r\n                <EditWeight\r\n                    id={selectedWeightId}\r\n                    onClose={() => {\r\n                        setShowEditWeight(false);\r\n                        handleUpdateWeight(); // Refresh list after edit\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}